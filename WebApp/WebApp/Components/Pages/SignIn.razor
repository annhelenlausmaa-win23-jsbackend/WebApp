@page "/signin"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using WebApp.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<SignIn> Logger
@inject NavigationManager NavigationManager

<PageTitle>Sign in</PageTitle>

<section class="section sign-in-section">
    <div class="content">
 
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="signin" class="sign-in-form" novalidate>
            <DataAnnotationsValidator />
            <div class="form-heading">
                <h1 class="h1">Welcome Back</h1>
                <p class="text-m">Don’t have an account yet? <a href="/signup">Sign up here.</a></p>
            </div>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert">
                    <p>@ErrorMessage</p>
                    <i class="fa-solid fa-triangle-exclamation icon"></i>
                </div>
            }
            <div class="input-wrapper">
                <div class="input-top-wrapper">
                    <label for="email" class="h6 label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-s span" />
                </div>
                <InputText @bind-Value="Input.Email" class="input" autocomplete="username" aria-required="true" />
            </div>
            <div class="input-wrapper">
                <div class="input-top-wrapper">
                    <label for="password" class="h6 label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-s span" />
                </div>
                <InputText type="password" @bind-Value="Input.Password" class="input" autocomplete="current-password" aria-required="true" />
            </div>
            <div class="checkbox-wrapper">
                <span class="text-s span" for="Input.RememberMe"></span>
                <div>
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="checkbox" />
                        Remember me
                    </label>
                </div>
            </div>
            <button type="submit" class="btn-theme-s button">Sign in</button>
        </EditForm>
        <a href="/" class="formLink">Forgot your password?</a>
        <div class="external-account-wrapper">
            <h6 class="h6">Or sign in with your social network</h6>
            <div class="social-media-button-wrapper">
                <a href="/" class="btn-gray"><i class="fa-brands fa-google"></i> Google</a>
                <a href="/" class="btn-gray"><i class="fa-brands fa-facebook"></i> Facebook</a>
            </div>
        </div>
    </div>
</section>

@code {
    private string? ErrorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo(ReturnUrl ?? "/");
        }
        else
        {
            ErrorMessage = "Incorrect email or password";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
